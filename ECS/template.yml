AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template for an AWS Fargate ECS stack with flexible subnet types.

Parameters:
  VpcCidrBlock:
    Description: CIDR block for the VPC.
    Type: String
    Default: '10.0.0.0/16'

  Subnet1CidrBlock:
    Description: CIDR block for Subnet 1.
    Type: String
    Default: '10.0.0.0/24'

  Subnet1Type:
    Description: Subnet 1 type (public or private).
    Type: String
    Default: 'public'
    AllowedValues:
      - public
      - private

  Subnet2CidrBlock:
    Description: CIDR block for Subnet 2.
    Type: String
    Default: '10.0.1.0/24'

  Subnet2Type:
    Description: Subnet 2 type (public or private).
    Type: String
    Default: 'public'
    AllowedValues:
      - public
      - private

  ResourceNamePrefix:
    Description: Prefix for resource names (e.g., MyApp for MyAppVPC, MyAppCluster, etc.).
    Type: String

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub '${ResourceNamePrefix}-VPC'

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Condition: CreatePublicSubnet1
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Ref Subnet1CidrBlock
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${ResourceNamePrefix}-Public-Subnet-1'

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Condition: CreatePrivateSubnet1
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Ref Subnet1CidrBlock
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${ResourceNamePrefix}-Private-Subnet-1'

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Condition: CreatePublicSubnet2
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Ref Subnet2CidrBlock
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${ResourceNamePrefix}-Public-Subnet-2'

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Condition: CreatePrivateSubnet2
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Ref Subnet2CidrBlock
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${ResourceNamePrefix}-Private-Subnet-2'

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Condition: CreatePublicSubnet1
    Properties:
      Tags:
        - Key: Name
          Value: !Sub '${ResourceNamePrefix}-IGW'

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Condition: CreatePublicSubnet1
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub '${ResourceNamePrefix}-ECS-Cluster'

Conditions:
  CreatePublicSubnet1:
    Fn::Equals:
      - !Ref Subnet1Type
      - 'public'
  CreatePrivateSubnet1:
    Fn::Not:
      - Condition: CreatePublicSubnet1

  CreatePublicSubnet2:
    Fn::Equals:
      - !Ref Subnet2Type
      - 'public'
  CreatePrivateSubnet2:
    Fn::Not:
      - Condition: CreatePublicSubnet2

Outputs:
  VPCId:
    Description: VPC ID
    Value: !Ref VPC
  Subnet1Id:
    Description: Subnet 1 ID
    Value: !If [CreatePublicSubnet1, !Ref PublicSubnet1, !Ref PrivateSubnet1]
  Subnet2Id:
    Description: Subnet 2 ID
    Value: !If [CreatePublicSubnet2, !Ref PublicSubnet2, !Ref PrivateSubnet2]
  ECSClusterName:
    Description: ECS Cluster Name
    Value: !Sub '${ResourceNamePrefix}-ECS-Cluster'
